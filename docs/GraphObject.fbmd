<card>
# GraphObject for the Facebook SDK for PHP

A `GraphObject` is a collection that represents a node returned by the Graph API.

</card>

<card>
## Facebook\GraphObject {#overview}

This base class has several subclasses:

[__GraphUser__](#user-instance-methods)
[__GraphPage__](#page-instance-methods)
[__GraphAlbum__](#album-instance-methods)
[__GraphLocation__](#location-instance-methods)
[__GraphSessionInfo__](#sessioninfo-instance-methods)  

Usage:

~~~~
// Get the base class GraphObject from the response
$object = $response->getGraphObject();

// Get the response typed as a GraphUser
$user = $response->getGraphUser());

// Get the response typed as a GraphPage
$page = $response->getGraphPage();

// User example
echo $object->getProperty('name');
echo $user->getName();

// Location example
echo $object->getProperty('country');
echo $loc->getCountry();

// SessionInfo example
$info = $session->getSessionInfo());
echo $info->getExpiresAt();
~~~~

</card>

<card>
## SPL Libraries {#spl}

The `GraphObject` collection and its subclasses implement several [SPL](http://php.net/manual/en/book.spl.php) libraries and [predefined PHP interfaces and classes](http://php.net/manual/en/reserved.interfaces.php) which make it convenient to work with the object in PHP. The supported libraries are `ArrayAccess`, `ArrayIterator`, `Countable`, and `IteratorAggregate`.

All of the following operations are possible on a `GraphObject`.

~~~~
$graphObject = $response->getGraphObject();

// Array access
$id = $graphObject['id'];

// Iteration
foreach ($graphObject as $key => $value) {
  // . . .
}

// Counting
$total = count($graphObject);
~~~~

</card>

<card>
## GraphObject Instance Methods {#instance-methods}


### asArray {#as-array}
`asArray()`  
Returns the raw representation (associative arrays, nested) of this objects underlying data.


### asJson {#as-json}
`asJson()`
Returns the data as a JSON string.


### getProperty {#get-property}
`getProperty(string $name, string $default = 'foo')`
Gets the value of a named key for this graph object.  If the value is a scalar (string, number, etc.) it will be returned.  If it's an associative array, it will be returned as a GraphObject.

The second argument lets you define a default value to return if the property doesn't exist.


### getPropertyNames {#get-property-names}
`getPropertyNames()`  
Returns an array with the names of all properties present on this graph object.


### map {#map}
`map(Closure $callback)`
Provides a way to map over the data within the collection just like `array_map()`.
</card>

<card>
## GraphUser Instance Methods {#user-instance-methods}

### getId {#getid}
`getId()`  
Returns the `id` property for the user as a string if present.
### getName {#getname}
`getName()`  
Returns the `name` property for the user as a string if present.
### getFirstName {#getfirstname}
`getFirstName()`  
Returns the `first_name` property for the user as a string if present.
### getMiddleName {#getmiddlename}
`getMiddleName()`  
Returns the `middle_name` property for the user as a string if present.
### getLastName {#getlastname}
`getLastName()`  
Returns the `last_name` property for the user as a string if present.
### getLink {#getlink}
`getLink()`  
Returns the `link` property for the user as a string if present.
### getUsername {#getusername}
`getUsername()`  
Returns the `username` property for the user as a string if present.
### getBirthday {#getbirthday}
`getBirthday()`  
Returns the `birthday` property for the user as a `\DateTime` if present.
### getLocation {#getlocation}
`getLocation()`  
Returns the `location` property for the user as a `Facebook\GraphLocation` if present.'
</card>

<card>
## GraphLocation Instance Methods {#location-instance-methods}

### getStreet {#getstreet}
`getStreet()`  
Returns the `street` property for the location as a string if present.
### getCity {#getcity}
`getCity()`  
Returns the `city` property for the location as a string if present.
### getState {#getstate}
`getState()`  
Returns the `state` property for the location as a string if present.
### getCountry {#getcountry}
`getCountry()`  
Returns the `country` property for the location as a string if present.
### getZip {#getzip}
`getZip()`  
Returns the `zip` property for the user as a location if present.
### getLatitude {#getlat}
`getLatitude()`  
Returns the `latitude` property for the location as a float if present.
### getLongitude {#getlon}
`getLongitude()`  
Returns the `latitude` property for the location as a float if present.
</card>

<card>
## GraphSessionInfo Instance Methods {#sessioninfo-instance-methods}

### getAppId {#getappid}
`getAppId()`  
Returns the `app_id` property for the session as a string if present.
### getApplication {#getapp}
`getApplication()`  
Returns the `application` property for the session as a string if present.
### getExpiresAt {#getexpires}
`getExpiresAt()`  
Returns the `expires_at` property for the session as a \DateTime if present.
### getIsValid {#getvalid}
`getIsValid()`  
Returns the `is_valid` property for the session as a boolean if present.
### getIssuedAt {#getissued}
`getIssuedAt()`  
Returns the `issued_at` property for the session as a \DateTime if present.
### getScopes {#getscopes}
`getScopes()`  
Returns the `scopes` property for the session as an array if present.
### getId {#getuid}
`getId()`  
Returns the `user_id` property for the session as a string if present.
</card>

